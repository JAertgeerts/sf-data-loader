#!/usr/bin/env node

'use strict';

const multipipe = require('multipipe');
const path = require('path');
const sqlparser = require('sql-parser');
const csvStringify = require('csv-stringify');
const BulkQueryReadable = require('../lib/bulk-query-readable');
const pkgJson = require('../package');
const cmd = require('commander');
const fs = require('fs');
let output = process.stdout;

cmd
  .usage('[options] [outputFile]')
  .description(`Export data from Salesforce in CSV format using a SOQL query.

    outputFile is optional. If omitted we output to STDOUT.

    We use the Bulk API.

    Bulk API query doesnâ€™t support the following SOQL:

    COUNT
    ROLLUP
    SUM
    GROUP BY CUBE
    OFFSET
    Nested SOQL queries
    Relationship fields

    https://developer.salesforce.com/docs/atlas.en-us.api_asynch.meta/api_asynch/asynch_api_intro.htm`)
  .version(pkgJson.version)
  .option('-s, --soql <query>', 'Soql query.')
  .option('-c, --config [path]', 'Config file defaults to ./config.js')
  .action(function(outputFile) {
    output = fs.createWriteStream(outputFile);
  });

cmd.parse(process.argv);

if (process.argv.length === 2) {
  cmd.help();
}

let bulkOptions = require(path.join(process.cwd(), 'config')).bulkApi;

if (cmd.config) {
  if (path.isAbsolute(cmd.config)) {
    bulkOptions = require(cmd.config).bulkApi;
  } else {
    bulkOptions = require(path.join(process.cwd(), cmd.config)).bulkApi;
  }
}

bulkOptions.object = getObjectFromSoql(cmd.soql);
bulkOptions.operation = 'query';

multipipe(
  new BulkQueryReadable(cmd.soql, bulkOptions).init(),
  csvStringify({
    header: true
  }),
  output,
  (err) => {
    if (err) {
      console.error('ERROR', err);
      process.exit(9);
    }
  });

function getObjectFromSoql(soql) {
  const tokens = sqlparser.lexer.tokenize(soql);
  let accountIsNext = false;
  let object = null;
  tokens.forEach((token) => {
    if (accountIsNext) {
      object = token[1];
      accountIsNext = false;
    }
    if (token[0] === 'FROM') {
      accountIsNext = true;
    }
  });
  return object;
}